//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Entity Developer tool using EF Core template.
// Code is generated on: 01/11/2021 19:56:27
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Common;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;
using System.Threading.Tasks;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Internal;
using Microsoft.EntityFrameworkCore.Metadata;

namespace appglobal.models
{

    public partial class test_hr_tect_model : DbContext
    {

        public test_hr_tect_model() :
            base()
        {
            OnCreated();
        }

        public test_hr_tect_model(DbContextOptions<test_hr_tect_model> options) :
            base(options)
        {
            OnCreated();
        }

        protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
        {
            if (!optionsBuilder.IsConfigured ||
                (!optionsBuilder.Options.Extensions.OfType<RelationalOptionsExtension>().Any(ext => !string.IsNullOrEmpty(ext.ConnectionString) || ext.Connection != null) &&
                 !optionsBuilder.Options.Extensions.Any(ext => !(ext is RelationalOptionsExtension) && !(ext is CoreOptionsExtension))))
            {
            }
            CustomizeConfiguration(ref optionsBuilder);
            base.OnConfiguring(optionsBuilder);
        }

        partial void CustomizeConfiguration(ref DbContextOptionsBuilder optionsBuilder);

        public virtual DbSet<m_feature> m_feature
        {
            get;
            set;
        }

        public virtual DbSet<m_feature_group> m_feature_group
        {
            get;
            set;
        }

        public virtual DbSet<m_parameter> m_parameter
        {
            get;
            set;
        }

        public virtual DbSet<m_company> m_company
        {
            get;
            set;
        }

        public virtual DbSet<m_employe> m_employe
        {
            get;
            set;
        }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            this.m_featureMapping(modelBuilder);
            this.Customizem_featureMapping(modelBuilder);

            this.m_feature_groupMapping(modelBuilder);
            this.Customizem_feature_groupMapping(modelBuilder);

            this.m_parameterMapping(modelBuilder);
            this.Customizem_parameterMapping(modelBuilder);

            this.m_companyMapping(modelBuilder);
            this.Customizem_companyMapping(modelBuilder);

            this.m_employeMapping(modelBuilder);
            this.Customizem_employeMapping(modelBuilder);

            RelationshipsMapping(modelBuilder);
            CustomizeMapping(ref modelBuilder);
        }

        #region m_feature Mapping

        private void m_featureMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<m_feature>().ToTable(@"m_feature");
            modelBuilder.Entity<m_feature>().Property(x => x.m_feature_id).HasColumnName(@"m_feature_id").IsRequired().ValueGeneratedOnAdd();
            modelBuilder.Entity<m_feature>().Property(x => x.m_feature_group_id).HasColumnName(@"m_feature_group_id").ValueGeneratedNever();
            modelBuilder.Entity<m_feature>().Property(x => x.feature_name).HasColumnName(@"feature_name").IsRequired().ValueGeneratedNever().HasMaxLength(100);
            modelBuilder.Entity<m_feature>().Property(x => x.feature_sequence).HasColumnName(@"feature_sequence").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<m_feature>().Property(x => x.feature_url).HasColumnName(@"feature_url").IsRequired().ValueGeneratedNever().HasMaxLength(255);
            modelBuilder.Entity<m_feature>().Property(x => x.feature_icon).HasColumnName(@"feature_icon").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<m_feature>().Property(x => x.feature_visible).HasColumnName(@"feature_visible").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<m_feature>().Property(x => x.feature_status).HasColumnName(@"feature_status").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<m_feature>().Property(x => x.feature_create_at).HasColumnName(@"feature_create_at").ValueGeneratedNever().HasMaxLength(10);
            modelBuilder.Entity<m_feature>().Property(x => x.feature_create_by).HasColumnName(@"feature_create_by").ValueGeneratedNever().HasMaxLength(10);
            modelBuilder.Entity<m_feature>().Property(x => x.feature_update_at).HasColumnName(@"feature_update_at").ValueGeneratedNever().HasMaxLength(10);
            modelBuilder.Entity<m_feature>().Property(x => x.feature_update_by).HasColumnName(@"feature_update_by").ValueGeneratedNever().HasMaxLength(10);
            modelBuilder.Entity<m_feature>().HasKey(@"m_feature_id");
        }

        partial void Customizem_featureMapping(ModelBuilder modelBuilder);

        #endregion

        #region m_feature_group Mapping

        private void m_feature_groupMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<m_feature_group>().ToTable(@"m_feature_group");
            modelBuilder.Entity<m_feature_group>().Property(x => x.m_feature_group_id).HasColumnName(@"m_feature_group_id").IsRequired().ValueGeneratedOnAdd();
            modelBuilder.Entity<m_feature_group>().Property(x => x.m_application_id).HasColumnName(@"m_application_id").ValueGeneratedNever();
            modelBuilder.Entity<m_feature_group>().Property(x => x.feature_group_name).HasColumnName(@"feature_group_name").IsRequired().ValueGeneratedNever().HasMaxLength(100);
            modelBuilder.Entity<m_feature_group>().Property(x => x.feature_group_url).HasColumnName(@"feature_group_url").IsRequired().ValueGeneratedNever().HasMaxLength(100);
            modelBuilder.Entity<m_feature_group>().Property(x => x.feature_group_status).HasColumnName(@"feature_group_status").IsRequired().ValueGeneratedNever().HasMaxLength(100);
            modelBuilder.Entity<m_feature_group>().Property(x => x.feature_group_squance).HasColumnName(@"feature_group_squance").IsRequired().ValueGeneratedNever().HasMaxLength(100);
            modelBuilder.Entity<m_feature_group>().Property(x => x.feature_group_create_at).HasColumnName(@"feature_group_create_at").ValueGeneratedNever().HasMaxLength(10);
            modelBuilder.Entity<m_feature_group>().Property(x => x.feature_group_create_by).HasColumnName(@"feature_group_create_by").ValueGeneratedNever().HasMaxLength(10);
            modelBuilder.Entity<m_feature_group>().Property(x => x.feature_group_update_at).HasColumnName(@"feature_group_update_at").ValueGeneratedNever().HasMaxLength(10);
            modelBuilder.Entity<m_feature_group>().Property(x => x.feature_group_update_by).HasColumnName(@"feature_group_update_by").ValueGeneratedNever().HasMaxLength(10);
            modelBuilder.Entity<m_feature_group>().Property(x => x.feature_group_icon).HasColumnName(@"feature_group_icon").ValueGeneratedNever();
            modelBuilder.Entity<m_feature_group>().HasKey(@"m_feature_group_id");
        }

        partial void Customizem_feature_groupMapping(ModelBuilder modelBuilder);

        #endregion

        #region m_parameter Mapping

        private void m_parameterMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<m_parameter>().ToTable(@"m_parameters");
            modelBuilder.Entity<m_parameter>().Property(x => x.m_parameter_id).HasColumnName(@"m_parameter_id").IsRequired().ValueGeneratedOnAdd();
            modelBuilder.Entity<m_parameter>().Property(x => x.parameter_group).HasColumnName(@"parameter_group").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<m_parameter>().Property(x => x.parameter_key).HasColumnName(@"parameter_key").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<m_parameter>().Property(x => x.parameter_value).HasColumnName(@"parameter_value").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<m_parameter>().HasKey(@"m_parameter_id");
        }

        partial void Customizem_parameterMapping(ModelBuilder modelBuilder);

        #endregion

        #region m_company Mapping

        private void m_companyMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<m_company>().ToTable(@"m_companies");
            modelBuilder.Entity<m_company>().Property(x => x.m_company_id).HasColumnName(@"m_company_id").IsRequired().ValueGeneratedOnAdd();
            modelBuilder.Entity<m_company>().Property(x => x.m_company_name).HasColumnName(@"m_company_name").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<m_company>().Property(x => x.m_company_email).HasColumnName(@"m_company_email").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<m_company>().Property(x => x.m_company_website).HasColumnName(@"m_company_website").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<m_company>().Property(x => x.m_company_logo).HasColumnName(@"m_company_logo").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<m_company>().HasKey(@"m_company_id");
        }

        partial void Customizem_companyMapping(ModelBuilder modelBuilder);

        #endregion

        #region m_employe Mapping

        private void m_employeMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<m_employe>().ToTable(@"m_employes");
            modelBuilder.Entity<m_employe>().Property(x => x.m_employe_id).HasColumnName(@"m_employe_id").IsRequired().ValueGeneratedOnAdd();
            modelBuilder.Entity<m_employe>().Property(x => x.m_employe_first_name).HasColumnName(@"m_employe_first_name").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<m_employe>().Property(x => x.m_employe_last_name).HasColumnName(@"m_employe_last_name").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<m_employe>().Property(x => x.m_employe_email).HasColumnName(@"m_employe_email").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<m_employe>().Property(x => x.m_employe_phone).HasColumnName(@"m_employe_phone").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<m_employe>().Property(x => x.m_employe_password).HasColumnName(@"m_employe_password").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<m_employe>().Property(x => x.m_company_id).HasColumnName(@"m_company_id").ValueGeneratedNever();
            modelBuilder.Entity<m_employe>().HasKey(@"m_employe_id");
        }

        partial void Customizem_employeMapping(ModelBuilder modelBuilder);

        #endregion

        private void RelationshipsMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<m_feature>().HasOne(x => x.m_feature_group).WithMany(op => op.m_feature).IsRequired(true).HasForeignKey(@"m_feature_group_id");

            modelBuilder.Entity<m_feature_group>().HasMany(x => x.m_feature).WithOne(op => op.m_feature_group).IsRequired(true).HasForeignKey(@"m_feature_group_id");

            modelBuilder.Entity<m_company>().HasMany(x => x.m_employes).WithOne(op => op.m_company).OnDelete(DeleteBehavior.Restrict).IsRequired(true).HasForeignKey(@"m_company_id");

            modelBuilder.Entity<m_employe>().HasOne(x => x.m_company).WithMany(op => op.m_employes).OnDelete(DeleteBehavior.Restrict).IsRequired(true).HasForeignKey(@"m_company_id");
        }

        partial void CustomizeMapping(ref ModelBuilder modelBuilder);

        public bool HasChanges()
        {
            return ChangeTracker.Entries().Any(e => e.State == Microsoft.EntityFrameworkCore.EntityState.Added || e.State == Microsoft.EntityFrameworkCore.EntityState.Modified || e.State == Microsoft.EntityFrameworkCore.EntityState.Deleted);
        }

        partial void OnCreated();
    }
}

namespace appglobal.models
{
    public partial class m_feature {

        public m_feature()
        {
            OnCreated();
        }

        public virtual int m_feature_id { get; set; }

        public virtual int m_feature_group_id { get; set; }

        public virtual string feature_name { get; set; }

        public virtual int feature_sequence { get; set; }

        public virtual string feature_url { get; set; }

        public virtual string feature_icon { get; set; }

        public virtual bool feature_visible { get; set; }

        public virtual string feature_status { get; set; }

        public virtual DateTime? feature_create_at { get; set; }

        public virtual int? feature_create_by { get; set; }

        public virtual DateTime? feature_update_at { get; set; }

        public virtual int? feature_update_by { get; set; }

        public virtual m_feature_group m_feature_group { get; set; }

        #region Extensibility Method Definitions

        partial void OnCreated();

        #endregion
    }
    public partial class m_feature_group {

        public m_feature_group()
        {
            this.m_feature = new List<m_feature>();
            OnCreated();
        }

        public virtual int m_feature_group_id { get; set; }

        public virtual int m_application_id { get; set; }

        public virtual string feature_group_name { get; set; }

        public virtual string feature_group_url { get; set; }

        public virtual string feature_group_status { get; set; }

        public virtual int feature_group_squance { get; set; }

        public virtual DateTime? feature_group_create_at { get; set; }

        public virtual int? feature_group_create_by { get; set; }

        public virtual DateTime? feature_group_update_at { get; set; }

        public virtual int? feature_group_update_by { get; set; }

        public virtual string feature_group_icon { get; set; }

        public virtual IList<m_feature> m_feature { get; set; }

        #region Extensibility Method Definitions

        partial void OnCreated();

        #endregion
    }
    public partial class m_parameter {

        public m_parameter()
        {
            OnCreated();
        }

        public virtual int m_parameter_id { get; set; }

        public virtual string parameter_group { get; set; }

        public virtual string parameter_key { get; set; }

        public virtual string parameter_value { get; set; }

        #region Extensibility Method Definitions

        partial void OnCreated();

        #endregion
    }
    public partial class m_company {

        public m_company()
        {
            this.m_employes = new List<m_employe>();
            OnCreated();
        }

        public virtual int m_company_id { get; set; }

        public virtual string m_company_name { get; set; }

        public virtual string m_company_email { get; set; }

        public virtual string m_company_website { get; set; }

        public virtual string m_company_logo { get; set; }

        public virtual IList<m_employe> m_employes { get; set; }

        #region Extensibility Method Definitions

        partial void OnCreated();

        #endregion
    }
    public partial class m_employe {

        public m_employe()
        {
            OnCreated();
        }

        public virtual int m_employe_id { get; set; }

        public virtual string m_employe_first_name { get; set; }

        public virtual string m_employe_last_name { get; set; }

        public virtual string m_employe_email { get; set; }

        public virtual string m_employe_phone { get; set; }

        public virtual string m_employe_password { get; set; }

        public virtual int m_company_id { get; set; }

        public virtual m_company m_company { get; set; }

        #region Extensibility Method Definitions

        partial void OnCreated();

        #endregion
    }

}
