// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using appglobal.models;

namespace test_hr_tect.models.migrations
{
    [DbContext(typeof(test_hr_tect_model))]
    [Migration("20211101122408_test_hr_tect_db_2021_11_01__1826")]
    partial class test_hr_tect_db_2021_11_01__1826
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("appglobal.models.m_company", b =>
                {
                    b.Property<int>("m_company_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("m_company_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("m_company_email")
                        .IsRequired()
                        .HasColumnName("m_company_email");

                    b.Property<string>("m_company_logo")
                        .IsRequired()
                        .HasColumnName("m_company_logo");

                    b.Property<string>("m_company_name")
                        .IsRequired()
                        .HasColumnName("m_company_name");

                    b.Property<string>("m_company_website")
                        .IsRequired()
                        .HasColumnName("m_company_website");

                    b.HasKey("m_company_id");

                    b.ToTable("m_companies");
                });

            modelBuilder.Entity("appglobal.models.m_employe", b =>
                {
                    b.Property<int>("m_employe_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("m_employe_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("m_company_id")
                        .HasColumnName("m_company_id");

                    b.Property<string>("m_employe_email")
                        .IsRequired()
                        .HasColumnName("m_employe_email");

                    b.Property<string>("m_employe_first_name")
                        .IsRequired()
                        .HasColumnName("m_employe_first_name");

                    b.Property<string>("m_employe_last_name")
                        .IsRequired()
                        .HasColumnName("m_employe_last_name");

                    b.Property<string>("m_employe_phone")
                        .IsRequired()
                        .HasColumnName("m_employe_phone");

                    b.HasKey("m_employe_id");

                    b.HasIndex("m_company_id");

                    b.ToTable("m_employes");
                });

            modelBuilder.Entity("appglobal.models.m_feature", b =>
                {
                    b.Property<int>("m_feature_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("m_feature_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("feature_create_at")
                        .HasColumnName("feature_create_at")
                        .HasMaxLength(10);

                    b.Property<int?>("feature_create_by")
                        .HasColumnName("feature_create_by")
                        .HasMaxLength(10);

                    b.Property<string>("feature_icon")
                        .IsRequired()
                        .HasColumnName("feature_icon")
                        .HasMaxLength(50);

                    b.Property<string>("feature_name")
                        .IsRequired()
                        .HasColumnName("feature_name")
                        .HasMaxLength(100);

                    b.Property<int>("feature_sequence")
                        .HasColumnName("feature_sequence");

                    b.Property<string>("feature_status")
                        .IsRequired()
                        .HasColumnName("feature_status");

                    b.Property<DateTime?>("feature_update_at")
                        .HasColumnName("feature_update_at")
                        .HasMaxLength(10);

                    b.Property<int?>("feature_update_by")
                        .HasColumnName("feature_update_by")
                        .HasMaxLength(10);

                    b.Property<string>("feature_url")
                        .IsRequired()
                        .HasColumnName("feature_url")
                        .HasMaxLength(255);

                    b.Property<bool>("feature_visible")
                        .HasColumnName("feature_visible");

                    b.Property<int>("m_feature_group_id")
                        .HasColumnName("m_feature_group_id");

                    b.HasKey("m_feature_id");

                    b.HasIndex("m_feature_group_id");

                    b.ToTable("m_feature");
                });

            modelBuilder.Entity("appglobal.models.m_feature_group", b =>
                {
                    b.Property<int>("m_feature_group_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("m_feature_group_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("feature_group_create_at")
                        .HasColumnName("feature_group_create_at")
                        .HasMaxLength(10);

                    b.Property<int?>("feature_group_create_by")
                        .HasColumnName("feature_group_create_by")
                        .HasMaxLength(10);

                    b.Property<string>("feature_group_icon")
                        .HasColumnName("feature_group_icon");

                    b.Property<string>("feature_group_name")
                        .IsRequired()
                        .HasColumnName("feature_group_name")
                        .HasMaxLength(100);

                    b.Property<int>("feature_group_squance")
                        .HasColumnName("feature_group_squance")
                        .HasMaxLength(100);

                    b.Property<string>("feature_group_status")
                        .IsRequired()
                        .HasColumnName("feature_group_status")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("feature_group_update_at")
                        .HasColumnName("feature_group_update_at")
                        .HasMaxLength(10);

                    b.Property<int?>("feature_group_update_by")
                        .HasColumnName("feature_group_update_by")
                        .HasMaxLength(10);

                    b.Property<string>("feature_group_url")
                        .IsRequired()
                        .HasColumnName("feature_group_url")
                        .HasMaxLength(100);

                    b.Property<int>("m_application_id")
                        .HasColumnName("m_application_id");

                    b.HasKey("m_feature_group_id");

                    b.ToTable("m_feature_group");
                });

            modelBuilder.Entity("appglobal.models.m_parameter", b =>
                {
                    b.Property<int>("m_parameter_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("m_parameter_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("parameter_group")
                        .IsRequired()
                        .HasColumnName("parameter_group");

                    b.Property<string>("parameter_key")
                        .IsRequired()
                        .HasColumnName("parameter_key");

                    b.Property<string>("parameter_value")
                        .IsRequired()
                        .HasColumnName("parameter_value");

                    b.HasKey("m_parameter_id");

                    b.ToTable("m_parameters");
                });

            modelBuilder.Entity("appglobal.models.m_employe", b =>
                {
                    b.HasOne("appglobal.models.m_company", "m_company")
                        .WithMany("m_employes")
                        .HasForeignKey("m_company_id")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("appglobal.models.m_feature", b =>
                {
                    b.HasOne("appglobal.models.m_feature_group", "m_feature_group")
                        .WithMany("m_feature")
                        .HasForeignKey("m_feature_group_id")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
