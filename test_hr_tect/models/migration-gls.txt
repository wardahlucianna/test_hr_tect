try
{
    if (!optionsBuilder.IsConfigured)
    {
        optionsBuilder.UseSqlServer(appglobal.AppGlobal.get_connection_string("MySQL"));
        CustomizeConfiguration(ref optionsBuilder);
        base.OnConfiguring(optionsBuilder);
    }
}
catch (Exception e)
{
    Console.WriteLine(e.Message);
}

aspaki_1.1.1.1

note:
- kalau jalanin di PM (Package Manager Console), pastikan sudah masuk active directory dr project, dengan perintah CD, contoh:
PM> cd GLSV2
PM> ls
- pastikan 1 level dengan file *.csproj dari project yang akan dibuild migrationnya

- perlu didefine penamaan migration file, semua increment mulai dr 1.
format : yyyymmddhhmmss_DB_[Versi Major/Apps].[Versi Minor].[revision number].[build].cs
contoh : 20170616051314_DB_2.1.1.1.cs

//start migration
dotnet ef migrations add [versi] --context "nama_context" 

// ==> [versi] diganti dengan konvensi penamaan yang ada di atas
contoh : 
-> dotnet ef migrations add test_hr_tect_model_2 --context "test_hr_tect_model" 
-> dotnet ef migrations add pg_simar_db_1 --context "test_hr_tect_model" -o models/migrations

//remove migration
dotnet ef migrations remove --context "Access" // ==> per versi migration

-> dotnet ef migrations remove --context "test_hr_tect_model"

//update database
dotnet ef database update --context "gls_sma"

//update database bisa dihjalankan lewat runtime coding yang ditempatkan di constructor Class Model GLSDBV2 :
this.Database.Migrate();



//CONSTRUCTOR OPTION ==>>

//conn string
protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder) {

  //utk star schema
  try {
    if (!optionsBuilder.IsConfigured) {
      //optionsBuilder.UseSqlServer(GLSDashboardCore.Classes.GLSDashboardCoreGlobal.get_connection_string("StarSchema"));
      optionsBuilder.UseSqlServer(GLSDashboardCore.GLSDashboardCoreGlobal.get_connection_string("StarSchema", "MySQL"));
      CustomizeConfiguration(ref optionsBuilder);
      base.OnConfiguring(optionsBuilder);
    }
  }
  catch (Exception e) {
    Console.WriteLine(e.Message);
  }  
  
  //atau utk access

  try {
    if (!optionsBuilder.IsConfigured) {
      //optionsBuilder.UseSqlServer(GLSDashboardCore.Classes.GLSDashboardCoreGlobal.get_connection_string("Access"));
      optionsBuilder.UseSqlServer(GLSDashboardCore.GLSDashboardCoreGlobal.get_connection_string("Access", "MySQL"));
      CustomizeConfiguration(ref optionsBuilder);
      base.OnConfiguring(optionsBuilder);
    }
  }
  catch (Exception e) {
    Console.WriteLine(e.Message);
  }
}


protected override void OnModelCreating(ModelBuilder modelBuilder) {

      //rename relasi biar gak exceeding key name length di EF UTAMA ->> StarSchema
      //paling bawah dari bagian OnModelCreating
      var index = 0;
      foreach (var entityType in modelBuilder.Model.GetEntityTypes())
      {
        foreach (var key in entityType.GetKeys())
        {
          Console.WriteLine("===============================================================");
          Console.WriteLine(Newtonsoft.Json.JsonConvert.SerializeObject(key.Relational()));
          key.Relational().Name = "PK_" + index;
          Console.WriteLine(key.Relational().Name + " Primary Key");
          index++;
        }
        foreach (var key in entityType.GetForeignKeys())
        {
          Console.WriteLine("===============================================================");
          Console.WriteLine(Newtonsoft.Json.JsonConvert.SerializeObject(key.Relational()));
          key.Relational().Name = "FK_" + index;
          Console.WriteLine(key.Relational().Name + " Foreign Key");
          index++;
        }
      }
}

>> UseSqlServer bisa diganti UseSqlServer